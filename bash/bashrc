# Extensions to be sourced by ~/.bashrc

# Function to assemble the Git part of our prompt.
git_prompt ()
{
    if ! git rev-parse --git-dir > /dev/null 2>&1; then
        return 0
    fi

    git_branch=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')

    if git diff --quiet 2>/dev/null >&2; then
        git_color="$c_git_clean"
    else
        git_color="$c_git_dirty"
    fi

    echo " [$git_color$git_branch${c_reset}]"
}

dev()
{
    if [ "$1" == "up" ]; then
	if [ -n "${2+x}" ] && [ "$2" = "rm" ] ; then
	    remove="--remove-existing-container"
	else
	    remove=
	fi
	devcontainer "$1" \
	    --mount type=bind,source="$HOME"/.config/nvim,target=/home/vscode/.config/nvim \
	    --mount type=bind,source="$HOME"/.local,target=/home/vscode/.local \
	    --mount type=bind,source="$HOME"/.gitconfig,target=/home/vscode/.gitconfig \
	    --mount type=bind,source="$HOME"/nvim,target=/home/vscode/nvim \
	    --mount type=bind,source="$SSH_AUTH_SOCK",target="$SSH_AUTH_SOCK" \
	    $remove --workspace-folder .
    else
        devcontainer exec \
	    --remote-env SSH_AUTH_SOCK="$SSH_AUTH_SOCK" \
	    --workspace-folder . "$@"
    fi
}

dirdiff()
{
    # Shell-escape each path:
    DIR1=$(printf '%q' "$1"); shift
    DIR2=$(printf '%q' "$1"); shift
    nvim $@ -c "DirDiff $DIR1 $DIR2"
}

mrc()
{
    local branch_name
    branch_name=$(git branch --show-current)
    git remote update && \
    git co main && \
    git pull && \
    git branch -d "${branch_name}" && \
    git remote prune origin
}

# Thy holy prompt.
PROMPT_COMMAND='PS1="${c_user}\u${c_reset}@${c_user}\h${c_reset}:${c_path}\W${c_reset}$(git_prompt)\$ "'

alias gis='git status'

. ~/.config/nvim/bash/git-completion.bash

# Required for WSL2 to avoid some error messages
sudo mount --make-rshared /

alias sudo='sudo '
if [ -z ${NVIM+x} ]; then
  alias vim=nvim
else
  alias vim='nvim --server $NVIM --remote'
fi
export EDITOR=vim
export VISUAL=vim

export REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
export SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt

export SSH_AUTH_SOCK=~/.ssh/ssh-agent.$HOSTNAME.sock
ssh-add -l 2>/dev/null >/dev/null
if [ $? -ge 2 ]; then
    rm "$SSH_AUTH_SOCK" 2>/dev/null >/dev/null
    ssh-agent -a "$SSH_AUTH_SOCK" >/dev/null
    ssh-add
fi
